{
  "openapi": "3.0.1",
  "info": {
    "title": "Smart Home Technologies API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:36135",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Витрина онлайн-магазина",
      "description": "API для обеспечения работы витрины онлайн магазина"
    }
  ],
  "paths": {
    "/api/v1/shopping-store": {
      "get": {
        "tags": [
          "Витрина онлайн-магазина"
        ],
        "description": "Получение списка товаров по типу в пагинированном виде",
        "operationId": "getProducts",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Категория товара",
              "enum": [
                "LIGHTING",
                "CONTROL",
                "SENSORS"
              ]
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "./common.json#/components/schemas/Pageable"
            }
          }
        ],
        "requestBody": {
          "description": "Тип товаров для возврата страницы: Управление, Датчики и т.д.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "description": "Категория товара",
                "enum": [
                  "LIGHTING",
                  "CONTROL",
                  "SENSORS"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Очередная страница товаров в соответствии с типом",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDto"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Витрина онлайн-магазина"
        ],
        "description": "Создание нового товара в ассортименте",
        "operationId": "createNewProduct",
        "requestBody": {
          "description": "Описательная часть вновь добавляемого товара в систему, например нового роутера и т.д.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Товар создан с присвоением соответствующего ID",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Витрина онлайн-магазина"
        ],
        "description": "Обновление товара в ассортименте, например уточнение описания, характеристик и т.д.",
        "operationId": "updateProduct",
        "requestBody": {
          "description": "Описательная часть изменяемого товара в системе",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Товар обновлен, возвращается информация из БД",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          },
          "404": {
            "description": "Ошибка, товар по идентификатору в БД не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "./common.json#/components/schemas/ApiErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shopping-store/removeProductFromStore": {
      "post": {
        "tags": [
          "Витрина онлайн-магазина"
        ],
        "description": "Удалить товар из ассортимента магазина. Функция для менеджерского состава.",
        "operationId": "removeProductFromStore",
        "requestBody": {
          "description": "Идентификатор товара в БД на удаление из ассортимента.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Признак успеха операции. true - если успешно, false - во всех остальных случаях",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Ошибка, товар по идентификатору в БД не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "./common.json#/components/schemas/ApiErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shopping-store/quantityState": {
      "post": {
        "tags": [
          "Витрина онлайн-магазина"
        ],
        "description": "Установка статуса по товару. API вызывается со стороны склада.",
        "operationId": "setProductQuantityState",
        "requestBody": {
          "description": "Запрос на изменение статуса товара в магазине, например: \"Закончился\", \"Мало\" и т.д.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProductQuantityStateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Статус успешно обновлен",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Ошибка, товар по идентификатору в БД не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "./common.json#/components/schemas/ApiErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/shopping-store/{productId}": {
      "get": {
        "tags": [
          "Витрина онлайн-магазина"
        ],
        "description": "Получить сведения по товару из БД.",
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Идентификатор товара в БД.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Актуальный товар со всеми сведениями из БД",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          },
          "404": {
            "description": "Ошибка, товар по идентификатору в БД не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "./common.json#/components/schemas/ApiErrorDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProductCategory": {
        "type": "string",
        "description": "Категория товара",
        "example": "DEVICE",
        "enum": [
          "LIGHTING",
          "CONTROL",
          "SENSORS"
        ]
      },
      "ProductDto": {
        "required": [
          "description",
          "price",
          "productName",
          "productState",
          "quantityState"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Идентификатор товара в БД",
            "format": "uuid",
            "nullable": true,
            "example": "53aa35c8-e659-44b2-882f-f6056e443c99"
          },
          "productName": {
            "type": "string",
            "description": "Наименование товара",
            "example": "device_1"
          },
          "description": {
            "type": "string",
            "description": "Описание товара",
            "example": "Управляемый товар"
          },
          "imageSrc": {
            "type": "string",
            "description": "Ссылка на картинку во внешнем хранилище или SVG ",
            "nullable": true,
            "example": "image/src/device_1"
          },
          "quantityState": {
            "$ref": "#/components/schemas/QuantityState"
          },
          "productState": {
            "$ref": "#/components/schemas/ProductState"
          },
          "productCategory": {
            "$ref": "#/components/schemas/ProductCategory"
          },
          "price": {
            "minimum": 1,
            "type": "number",
            "description": "Цена товара",
            "example": 123.12
          }
        },
        "description": "Товар, продаваемый в интернет-магазине"
      },
      "ProductState": {
        "type": "string",
        "description": "Статус товара",
        "example": "ACTIVE",
        "enum": [
          "ACTIVE",
          "DEACTIVATE"
        ]
      },
      "QuantityState": {
        "type": "string",
        "description": "Статус, перечисляющий состояние остатка как свойства товара",
        "example": "ENDED",
        "enum": [
          "ENDED",
          "FEW",
          "ENOUGH",
          "MANY"
        ]
      },
      "SetProductQuantityStateRequest": {
        "required": [
          "productId",
          "quantityState"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Идентификатор товара",
            "format": "uuid"
          },
          "quantityState": {
            "$ref": "#/components/schemas/QuantityState"
          }
        },
        "description": "Запрос на изменение статуса остатка товара"
      }
    }
  }
}